generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String?
  categoryId  String
  image       String?
  price       Float
  slug        String     @unique
  inventory   Int        @default(0)
  cartItems   CartItem[]
  category    Category   @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
}

model Category {
  id       String    @id @default(cuid())
  name     String
  slug     String    @unique
  products Product[]
}

model Cart {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
  @@index([cartId])
  @@index([productId])
}

model Order {
  id        String   @id @default(cuid())
  total     Float
  status    String   @default("pending")
  items     OrderItem[]
  stripeSessionId String?
  stripePaymentIntentId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
}

model OrderItem {
  id       String    @id @default(cuid())
  order    Order     @relation(fields: [orderId], references: [id])
  orderId  String
  product  Product   @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)
  price    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}